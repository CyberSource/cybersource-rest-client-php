<?php
/**
 * UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformationTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  CyberSource
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace CyberSource;

/**
 * UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformationTest Class Doc Comment
 *
 * @category    Class */
// * @description UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation
/**
 * @package     CyberSource
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformationTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "UnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation"
     */
    public function testUnderwritingConfigurationOrganizationInformationBusinessInformationOwnerInformation()
    {
    }

    /**
     * Test attribute "firstName"
     */
    public function testPropertyFirstName()
    {
    }

    /**
     * Test attribute "middleName"
     */
    public function testPropertyMiddleName()
    {
    }

    /**
     * Test attribute "lastName"
     */
    public function testPropertyLastName()
    {
    }

    /**
     * Test attribute "birthDate"
     */
    public function testPropertyBirthDate()
    {
    }

    /**
     * Test attribute "isPrimary"
     */
    public function testPropertyIsPrimary()
    {
    }

    /**
     * Test attribute "hasSignificantResponsibility"
     */
    public function testPropertyHasSignificantResponsibility()
    {
    }

    /**
     * Test attribute "ownerDirector"
     */
    public function testPropertyOwnerDirector()
    {
    }

    /**
     * Test attribute "nationalId"
     */
    public function testPropertyNationalId()
    {
    }

    /**
     * Test attribute "idCountry"
     */
    public function testPropertyIdCountry()
    {
    }

    /**
     * Test attribute "passportNumber"
     */
    public function testPropertyPassportNumber()
    {
    }

    /**
     * Test attribute "passportCountry"
     */
    public function testPropertyPassportCountry()
    {
    }

    /**
     * Test attribute "jobTitle"
     */
    public function testPropertyJobTitle()
    {
    }

    /**
     * Test attribute "ownershipPercentage"
     */
    public function testPropertyOwnershipPercentage()
    {
    }

    /**
     * Test attribute "nationality"
     */
    public function testPropertyNationality()
    {
    }

    /**
     * Test attribute "dueDiligenceRequired"
     */
    public function testPropertyDueDiligenceRequired()
    {
    }

    /**
     * Test attribute "phoneNumberCountryCode"
     */
    public function testPropertyPhoneNumberCountryCode()
    {
    }

    /**
     * Test attribute "phoneNumber"
     */
    public function testPropertyPhoneNumber()
    {
    }

    /**
     * Test attribute "email"
     */
    public function testPropertyEmail()
    {
    }

    /**
     * Test attribute "address"
     */
    public function testPropertyAddress()
    {
    }
}
