<?php
/**
 * ECheckConfigFeaturesAccountValidationServiceProcessors
 *
 * PHP version 5
 *
 * @category Class
 * @package  CyberSource
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * CyberSource Merged Spec
 *
 * All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace CyberSource\Model;

use \ArrayAccess;

/**
 * ECheckConfigFeaturesAccountValidationServiceProcessors Class Doc Comment
 *
 * @category    Class
 * @description *NEW* Name of the payment processor. Example - \&quot;wellsfargoach\&quot;
 * @package     CyberSource
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ECheckConfigFeaturesAccountValidationServiceProcessors implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'ECheckConfig_features_accountValidationService_processors';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'avsAccountOwnershipService' => 'bool',
        'avsAccountStatusService' => 'bool',
        'avsSignedAgreement' => 'bool',
        'avsCalculatedResponseBehavior' => 'object',
        'avsAdditionalId' => 'string',
        'enableAvs' => 'bool',
        'avsEntityId' => 'string',
        'avsResultMode' => 'object',
        'enableAvsTokenCreation' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'avsAccountOwnershipService' => null,
        'avsAccountStatusService' => null,
        'avsSignedAgreement' => null,
        'avsCalculatedResponseBehavior' => null,
        'avsAdditionalId' => null,
        'enableAvs' => null,
        'avsEntityId' => null,
        'avsResultMode' => null,
        'enableAvsTokenCreation' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'avsAccountOwnershipService' => 'avsAccountOwnershipService',
        'avsAccountStatusService' => 'avsAccountStatusService',
        'avsSignedAgreement' => 'avsSignedAgreement',
        'avsCalculatedResponseBehavior' => 'avsCalculatedResponseBehavior',
        'avsAdditionalId' => 'avsAdditionalId',
        'enableAvs' => 'enableAvs',
        'avsEntityId' => 'avsEntityId',
        'avsResultMode' => 'avsResultMode',
        'enableAvsTokenCreation' => 'enableAvsTokenCreation'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'avsAccountOwnershipService' => 'setAvsAccountOwnershipService',
        'avsAccountStatusService' => 'setAvsAccountStatusService',
        'avsSignedAgreement' => 'setAvsSignedAgreement',
        'avsCalculatedResponseBehavior' => 'setAvsCalculatedResponseBehavior',
        'avsAdditionalId' => 'setAvsAdditionalId',
        'enableAvs' => 'setEnableAvs',
        'avsEntityId' => 'setAvsEntityId',
        'avsResultMode' => 'setAvsResultMode',
        'enableAvsTokenCreation' => 'setEnableAvsTokenCreation'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'avsAccountOwnershipService' => 'getAvsAccountOwnershipService',
        'avsAccountStatusService' => 'getAvsAccountStatusService',
        'avsSignedAgreement' => 'getAvsSignedAgreement',
        'avsCalculatedResponseBehavior' => 'getAvsCalculatedResponseBehavior',
        'avsAdditionalId' => 'getAvsAdditionalId',
        'enableAvs' => 'getEnableAvs',
        'avsEntityId' => 'getAvsEntityId',
        'avsResultMode' => 'getAvsResultMode',
        'enableAvsTokenCreation' => 'getEnableAvsTokenCreation'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['avsAccountOwnershipService'] = isset($data['avsAccountOwnershipService']) ? $data['avsAccountOwnershipService'] : null;
        $this->container['avsAccountStatusService'] = isset($data['avsAccountStatusService']) ? $data['avsAccountStatusService'] : null;
        $this->container['avsSignedAgreement'] = isset($data['avsSignedAgreement']) ? $data['avsSignedAgreement'] : null;
        $this->container['avsCalculatedResponseBehavior'] = isset($data['avsCalculatedResponseBehavior']) ? $data['avsCalculatedResponseBehavior'] : null;
        $this->container['avsAdditionalId'] = isset($data['avsAdditionalId']) ? $data['avsAdditionalId'] : null;
        $this->container['enableAvs'] = isset($data['enableAvs']) ? $data['enableAvs'] : true;
        $this->container['avsEntityId'] = isset($data['avsEntityId']) ? $data['avsEntityId'] : null;
        $this->container['avsResultMode'] = isset($data['avsResultMode']) ? $data['avsResultMode'] : null;
        $this->container['enableAvsTokenCreation'] = isset($data['enableAvsTokenCreation']) ? $data['enableAvsTokenCreation'] : false;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets avsAccountOwnershipService
     * @return bool
     */
    public function getAvsAccountOwnershipService()
    {
        return $this->container['avsAccountOwnershipService'];
    }

    /**
     * Sets avsAccountOwnershipService
     * @param bool $avsAccountOwnershipService *NEW* Determined in WF eTicket if account has opted into the Account Ownership Service.
     * @return $this
     */
    public function setAvsAccountOwnershipService($avsAccountOwnershipService)
    {
        $this->container['avsAccountOwnershipService'] = $avsAccountOwnershipService;

        return $this;
    }

    /**
     * Gets avsAccountStatusService
     * @return bool
     */
    public function getAvsAccountStatusService()
    {
        return $this->container['avsAccountStatusService'];
    }

    /**
     * Sets avsAccountStatusService
     * @param bool $avsAccountStatusService *NEW* Determined in WF eTicket if account has opted into the Account Status Service.
     * @return $this
     */
    public function setAvsAccountStatusService($avsAccountStatusService)
    {
        $this->container['avsAccountStatusService'] = $avsAccountStatusService;

        return $this;
    }

    /**
     * Gets avsSignedAgreement
     * @return bool
     */
    public function getAvsSignedAgreement()
    {
        return $this->container['avsSignedAgreement'];
    }

    /**
     * Sets avsSignedAgreement
     * @param bool $avsSignedAgreement *NEW* Taken from Addendum Agreement Column in boarding form.
     * @return $this
     */
    public function setAvsSignedAgreement($avsSignedAgreement)
    {
        $this->container['avsSignedAgreement'] = $avsSignedAgreement;

        return $this;
    }

    /**
     * Gets avsCalculatedResponseBehavior
     * @return object
     */
    public function getAvsCalculatedResponseBehavior()
    {
        return $this->container['avsCalculatedResponseBehavior'];
    }

    /**
     * Sets avsCalculatedResponseBehavior
     * @param object $avsCalculatedResponseBehavior *NEW*
     * @return $this
     */
    public function setAvsCalculatedResponseBehavior($avsCalculatedResponseBehavior)
    {
        $this->container['avsCalculatedResponseBehavior'] = $avsCalculatedResponseBehavior;

        return $this;
    }

    /**
     * Gets avsAdditionalId
     * @return string
     */
    public function getAvsAdditionalId()
    {
        return $this->container['avsAdditionalId'];
    }

    /**
     * Sets avsAdditionalId
     * @param string $avsAdditionalId *NEW* Also known as the Additional ID. Taken from the boarding form.
     * @return $this
     */
    public function setAvsAdditionalId($avsAdditionalId)
    {
        $this->container['avsAdditionalId'] = $avsAdditionalId;

        return $this;
    }

    /**
     * Gets enableAvs
     * @return bool
     */
    public function getEnableAvs()
    {
        return $this->container['enableAvs'];
    }

    /**
     * Sets enableAvs
     * @param bool $enableAvs *NEW*
     * @return $this
     */
    public function setEnableAvs($enableAvs)
    {
        $this->container['enableAvs'] = $enableAvs;

        return $this;
    }

    /**
     * Gets avsEntityId
     * @return string
     */
    public function getAvsEntityId()
    {
        return $this->container['avsEntityId'];
    }

    /**
     * Sets avsEntityId
     * @param string $avsEntityId *NEW* Also known as the AVS Gateway Entity ID.
     * @return $this
     */
    public function setAvsEntityId($avsEntityId)
    {
        $this->container['avsEntityId'] = $avsEntityId;

        return $this;
    }

    /**
     * Gets avsResultMode
     * @return object
     */
    public function getAvsResultMode()
    {
        return $this->container['avsResultMode'];
    }

    /**
     * Sets avsResultMode
     * @param object $avsResultMode *NEW*
     * @return $this
     */
    public function setAvsResultMode($avsResultMode)
    {
        $this->container['avsResultMode'] = $avsResultMode;

        return $this;
    }

    /**
     * Gets enableAvsTokenCreation
     * @return bool
     */
    public function getEnableAvsTokenCreation()
    {
        return $this->container['enableAvsTokenCreation'];
    }

    /**
     * Sets enableAvsTokenCreation
     * @param bool $enableAvsTokenCreation *NEW* Applicable if the merchant wants to run AVS on token creation requests only.
     * @return $this
     */
    public function setEnableAvsTokenCreation($enableAvsTokenCreation)
    {
        $this->container['enableAvsTokenCreation'] = $enableAvsTokenCreation;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\CyberSource\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\CyberSource\ObjectSerializer::sanitizeForSerialization($this));
    }
}


